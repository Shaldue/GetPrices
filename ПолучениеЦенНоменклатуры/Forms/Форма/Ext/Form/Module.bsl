
&НаКлиенте
Асинх Процедура Загрузить(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = "Выберите файл Excel";
	ПараметрыДиалога.Фильтр = "Таблица Excel | *.xls; *.xlsx";
	
	ФайлНаСервере = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога);
	
	Если ФайлНаСервере <> Неопределено Тогда
		Объект.ТоварыExcel.Очистить();
		ЗагрузитьНаСервере(ФайлНаСервере.Адрес, ФайлНаСервере.СсылкаНаФайл.Расширение); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере(АдресФайла, РасширениеФайла)
	
	ПутьКФайлуСервер = ПолучитьИмяВременногоФайла(РасширениеФайла);
	
	ФайлИзХранилища = ПолучитьИзВременногоХранилища(АдресФайла);
	ФайлИзХранилища.Записать(ПутьКФайлуСервер);
	
	ТаблицаExcel = Новый ТабличныйДокумент;
	Попытка
		ТаблицаExcel.Прочитать(ПутьКФайлуСервер);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось прочитать файл по причине: " + ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаExcel.Область());
	ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Выполнить();
	
	Результат = ПостроительЗапроса.Результат.Выгрузить();
	
	МассивАртикулы = Результат.ВыгрузитьКолонку("Артикул");
	
	УникальныеАртикулы = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УникальныеАртикулы, МассивАртикулы, Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Артикул КАК Артикул
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Артикул В(&Артикул)";
	
	Запрос.УстановитьПараметр("Артикул", УникальныеАртикулы);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Соответствие = Новый Соответствие;
	Пока РезультатЗапроса.Следующий() Цикл
		Соответствие.Вставить(РезультатЗапроса.Артикул, РезультатЗапроса.Ссылка);	
	КонецЦикла;
	
	Для Каждого Строка Из Результат Цикл
		
		Номенклатура = Соответствие.Получить(Строка.Артикул);
		
		Если Номенклатура = Неопределено Тогда
			Номенклатура = СоздатьНоменклатуру(Строка);
			Соответствие.Вставить(Строка.Артикул, Номенклатура);
		КонецЕсли;
		
		НоваяСтрока = Объект.ТоварыExcel.Добавить();
		НоваяСтрока.Артикул = Строка.Артикул;
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Дата = СтроковыеФункцииКлиентСервер.СтрокаВДату(Строка.Дата);
		НоваяСтрока.ВидЦены = Объект.ВидЦены;
		
	КонецЦикла;
	
	УдалитьФайлы(ПутьКФайлуСервер);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция СоздатьНоменклатуру(ДанныеНоменклатуры)
	Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	Номенклатура.Наименование = ДанныеНоменклатуры.Наименование;
	Номенклатура.Артикул = ДанныеНоменклатуры.Артикул;
	Номенклатура.КатегорияНоменклатуры = Справочники.КатегорииНоменклатуры.БезКатегории;
	Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас;
	Номенклатура.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.шт;
	Номенклатура.НаименованиеПолное = ДанныеНоменклатуры.Наименование;
	Номенклатура.МетодОценки = Перечисления.МетодОценкиЗапасов.FIFO;
	Номенклатура.Записать();
	Возврат Номенклатура;
КонецФункции

&НаКлиенте
Процедура ПолучитьЦены(Команда)
	
	Если Объект.ВидЦены.Пустая() Или Объект.ТоварыExcel.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран вид цены или не запонена табличная часть";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПолучитьЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Артикул КАК Артикул,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Дата КАК Дата,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Дата КАК Дата,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ТаблицаТоваров.Артикул КАК Артикул
	|ПОМЕСТИТЬ ВтДаты
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ЦеныНоменклатуры.ВидЦен = ТаблицаТоваров.ВидЦены
	|			И ЦеныНоменклатуры.Период <= ТаблицаТоваров.Дата
	|			И ЦеныНоменклатуры.Номенклатура = ТаблицаТоваров.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Дата,
	|	ТаблицаТоваров.ВидЦены,
	|	ТаблицаТоваров.Артикул
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДаты.Артикул КАК Артикул,
	|	ВтДаты.Номенклатура КАК Номенклатура,
	|	ВтДаты.Дата КАК Дата,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ВтДаты.ВидЦены КАК ВидЦены
	|ИЗ
	|	ВтДаты КАК ВтДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ВтДаты.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ВтДаты.ВидЦены = ЦеныНоменклатуры.ВидЦен
	|			И ВтДаты.Период = ЦеныНоменклатуры.Период
	|ГДЕ
	|	НЕ ВтДаты.Номенклатура ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.ТоварыExcel.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Объект.ТоварыExcel.Загрузить(РезультатЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ВидЦеныПриИзмененииНаСервере()
	Для Каждого Строка Из Объект.ТоварыExcel Цикл
		Строка.ВидЦены = Объект.ВидЦены;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	ВидЦеныПриИзмененииНаСервере();
КонецПроцедуры
